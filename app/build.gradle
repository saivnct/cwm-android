apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.protobuf'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdk 33

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.lgt.cwm"
        minSdk 19
        targetSdk 33
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //// path to .proto file
    sourceSets {
        main {
            proto {
                srcDir 'src/main/protos'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //multi-dex - support firebase on sdk <= 20
//    implementation 'com.android.support:multidex:1.0.3'

    // Navigation
    def navigation_version = "2.5.1"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    //testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation '"androidx.test:rules:1.4.0'
    // Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'

    // mocks
    testImplementation 'org.mockito:mockito-core:2.23.0'
    //  Architecture Components testing libraries
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation 'androidx.work:work-testing:2.7.1'

    testImplementation 'com.google.truth:truth:1.0'

    // Android UI and appcompat
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.fragment:fragment-ktx:1.5.2'

    // Hilt dependencies
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Hilt testing dependency
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    // Make Hilt generate code in the androidTest folder
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    //Hilt for Worker
    implementation("androidx.hilt:hilt-work:1.0.0")
    // When using Kotlin.
    kapt("androidx.hilt:hilt-compiler:1.0.0")


    // Coroutines
    def coroutines_version = "1.6.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    // Coroutines testing
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // ViewModel and LiveData
    def lifecycle_version = "2.5.1"
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")

    // network & serialization
    implementation 'com.google.code.gson:gson:2.9.0'    // Gson for Json process
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
//    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    //OkHttp
    implementation "com.squareup.okhttp3:okhttp:3.14.9"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.9'



    //ui
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation "com.vanniktech:emoji-ios:0.15.0"

    //Image loading
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    kapt 'com.github.bumptech.glide:compiler:4.13.2'

    implementation 'com.annimon:stream:1.2.2'

    //18. Download Image and display to image view
//    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'

    //play video
    implementation 'com.google.android.exoplayer:exoplayer:2.18.1'
    implementation 'com.google.android.exoplayer:extension-mediasession:2.18.1'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.18.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.18.1'

    //glide
    implementation "com.github.bumptech.glide:glide:4.13.2"

    //lotie animation
    implementation 'com.airbnb.android:lottie:5.2.0'

    //eventbus
    implementation("org.greenrobot:eventbus:3.3.1")

    // threading
    implementation 'androidx.annotation:annotation:1.4.0'

    //arch_libraries
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
    // Room for database
    def room_version = '2.4.3'
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // 3: Navigation Components
//    def navigationVersion = "2.3.0"
//    implementation "android.arch.navigation:navigation-fragment-ktx:$navigationVersion"
//    implementation "android.arch.navigation:navigation-ui-ktx:$navigationVersion"

    //8 View pager and tab layout
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation "android.arch.navigation:navigation-ui-ktx:1.0.0"

    //9 Share preference
    implementation 'androidx.preference:preference-ktx:1.2.0'

    //10 Paging for recycle view adapter
    implementation 'androidx.paging:paging-runtime-ktx:3.1.1'

    //13 Sweet Alert Dialog
    implementation 'com.github.f0ris.sweetalert:library:1.6.2'

    //15 ui https://github.com/wasabeef/awesome-android-ui
    //https://github.com/thyrlian/AwesomeValidation
    implementation 'com.basgeekball:awesome-validation:4.2'

    //https://github.com/ParkSangGwon/TedPermission
//    implementation 'io.github.ParkSangGwon:tedpermission-coroutine:3.3.0'


    //Local Broadcast Manager track the changes of internet connection
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'


    //grpc
    implementation "io.grpc:grpc-okhttp:$grpc_version"
    implementation "io.grpc:grpc-protobuf-lite:$grpc_version"
    implementation "io.grpc:grpc-stub:$grpc_version"
    implementation "io.grpc:grpc-core:$grpc_version"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    api("io.grpc:grpc-kotlin-stub:$grpcKotlinVersion")
    api("com.google.protobuf:protobuf-kotlin-lite:$protoc_version")

    //socketio v1
    implementation ('io.socket:socket.io-client:0.9.0') {
        // excluding org.json which is provided by Android
        exclude group: 'org.json', module: 'json'
    }

    //socketio v4
//    implementation ('io.socket:socket.io-client:2.0.1') {
//        // excluding org.json which is provided by Android
//        exclude group: 'org.json', module: 'json'
//    }

    //firebase
    implementation platform('com.google.firebase:firebase-bom:30.2.0')
    // Declare the dependencies for the Firebase Cloud Messaging and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'


    //5 RxKotlin
    implementation("io.reactivex.rxjava3:rxjava:3.0.12")
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    //Rx permission
    implementation 'com.github.tbruyelle:rxpermissions:0.12'


    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'

    //Synchronized Time Android Library
    //https://github.com/lyft/Kronos-Android
    implementation "com.lyft.kronos:kronos-android:0.0.1-alpha11"


}

protobuf {
    generatedFilesBaseDir = "$projectDir/src"

    protoc {
        artifact = "com.google.protobuf:protoc:$protoc_version"
    }
    plugins {
        java {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version"
        }
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version"
        }
        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:$grpcKotlinVersion:jdk8@jar"
        }
    }
    generateProtoTasks {
        all().each {
            it.plugins {
                java {
                    option("lite")
                }
                grpc {
                    option("lite")
                }
                grpckt {
                    option("lite")
                }
            }
            it.builtins {
                kotlin {
                    option("lite")
                }
            }
        }
    }
}